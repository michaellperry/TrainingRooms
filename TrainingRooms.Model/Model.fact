namespace TrainingRooms.Model;

fact Individual {
key:
    string anonymousId;
}

fact Installation {
key:
	unique;
}

fact Venue {
key:
	unique;

query:
	Room* rooms {
		Room r : r.venue = this
			where not r.isDeleted
	}

	Group* groups {
		Group g : g.venue = this
			where not g.isDeleted
	}
}

fact VenueToken {
key:
	string identifier;

mutable:
	publish Venue venue;
}

fact Day {
key:
	date when;
}

fact Room {
key:
	unique;
	publish Venue venue;

mutable:
	string name;

query:
	bool isDeleted {
		exists RoomDelete d : d.room = this
	}
}

fact RoomDelete {
key:
	Room room;
}

fact Group {
key:
	unique;
	Venue venue;

mutable:
	string name;
	string imageUrl;

query:
	bool isDeleted {
		exists GroupDelete d : d.group = this
	}
}

fact GroupDelete {
key:
	Group group;
}

fact Schedule {
key:
	publish Room room;
	Day day;

query:
	Event* events {
		EventSchedule es : es.schedule = this
			where es.isCurrent
		Event e : e = es.event
			where not e.isDeleted
	}
}

fact Event {
key:
	unique;

mutable:
	Group group;
	int startMinutes;
	int endMinutes;

query:
	bool isDeleted {
		exists EventDelete d : d.deletedEvent = this
	}

	EventSchedule* eventSchedules {
		EventSchedule es : es.event = this
			where es.isCurrent
	}
}

fact EventSchedule {
key:
	Event event;
	publish Schedule schedule;
	EventSchedule* prior;

query:
	bool isCurrent {
		not exists EventSchedule next : next.prior = this
	}
}

fact EventDelete {
key:
	Event deletedEvent;
}